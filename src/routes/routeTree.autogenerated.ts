/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './__root'
import { Route as LoginImport } from './login'
import { Route as IndexImport } from './index'
import { Route as UserUserImport } from './user/_user'
import { Route as AdminAdminImport } from './admin/_admin'
import { Route as UserUserXpubImport } from './user/_user.xpub'
import { Route as UserUserTransactionsImport } from './user/_user.transactions'
import { Route as UserUserAccessKeysImport } from './user/_user.access-keys'
import { Route as AdminAdminXpubImport } from './admin/_admin.xpub'
import { Route as AdminAdminWebhooksImport } from './admin/_admin.webhooks'
import { Route as AdminAdminTransactionsImport } from './admin/_admin.transactions'
import { Route as AdminAdminPaymailsImport } from './admin/_admin.paymails'
import { Route as AdminAdminContactsImport } from './admin/_admin.contacts'
import { Route as AdminAdminAccessKeysImport } from './admin/_admin.access-keys'

// Create Virtual Routes

const UserImport = createFileRoute('/user')()
const AdminImport = createFileRoute('/admin')()
const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const UserRoute = UserImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./about.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserUserRoute = UserUserImport.update({
  id: '/_user',
  getParentRoute: () => UserRoute,
} as any)

const AdminAdminRoute = AdminAdminImport.update({
  id: '/_admin',
  getParentRoute: () => AdminRoute,
} as any)

const UserUserXpubRoute = UserUserXpubImport.update({
  id: '/xpub',
  path: '/xpub',
  getParentRoute: () => UserUserRoute,
} as any)

const UserUserTransactionsRoute = UserUserTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => UserUserRoute,
} as any)

const UserUserAccessKeysRoute = UserUserAccessKeysImport.update({
  id: '/access-keys',
  path: '/access-keys',
  getParentRoute: () => UserUserRoute,
} as any)

const AdminAdminXpubRoute = AdminAdminXpubImport.update({
  id: '/xpub',
  path: '/xpub',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminWebhooksRoute = AdminAdminWebhooksImport.update({
  id: '/webhooks',
  path: '/webhooks',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminTransactionsRoute = AdminAdminTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminPaymailsRoute = AdminAdminPaymailsImport.update({
  id: '/paymails',
  path: '/paymails',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminContactsRoute = AdminAdminContactsImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminAccessKeysRoute = AdminAdminAccessKeysImport.update({
  id: '/access-keys',
  path: '/access-keys',
  getParentRoute: () => AdminAdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/admin/_admin': {
      id: '/admin/_admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminImport
      parentRoute: typeof AdminRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/user/_user': {
      id: '/user/_user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserUserImport
      parentRoute: typeof UserRoute
    }
    '/admin/_admin/access-keys': {
      id: '/admin/_admin/access-keys'
      path: '/access-keys'
      fullPath: '/admin/access-keys'
      preLoaderRoute: typeof AdminAdminAccessKeysImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/contacts': {
      id: '/admin/_admin/contacts'
      path: '/contacts'
      fullPath: '/admin/contacts'
      preLoaderRoute: typeof AdminAdminContactsImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/paymails': {
      id: '/admin/_admin/paymails'
      path: '/paymails'
      fullPath: '/admin/paymails'
      preLoaderRoute: typeof AdminAdminPaymailsImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/transactions': {
      id: '/admin/_admin/transactions'
      path: '/transactions'
      fullPath: '/admin/transactions'
      preLoaderRoute: typeof AdminAdminTransactionsImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/webhooks': {
      id: '/admin/_admin/webhooks'
      path: '/webhooks'
      fullPath: '/admin/webhooks'
      preLoaderRoute: typeof AdminAdminWebhooksImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/xpub': {
      id: '/admin/_admin/xpub'
      path: '/xpub'
      fullPath: '/admin/xpub'
      preLoaderRoute: typeof AdminAdminXpubImport
      parentRoute: typeof AdminAdminImport
    }
    '/user/_user/access-keys': {
      id: '/user/_user/access-keys'
      path: '/access-keys'
      fullPath: '/user/access-keys'
      preLoaderRoute: typeof UserUserAccessKeysImport
      parentRoute: typeof UserUserImport
    }
    '/user/_user/transactions': {
      id: '/user/_user/transactions'
      path: '/transactions'
      fullPath: '/user/transactions'
      preLoaderRoute: typeof UserUserTransactionsImport
      parentRoute: typeof UserUserImport
    }
    '/user/_user/xpub': {
      id: '/user/_user/xpub'
      path: '/xpub'
      fullPath: '/user/xpub'
      preLoaderRoute: typeof UserUserXpubImport
      parentRoute: typeof UserUserImport
    }
  }
}

// Create and export the route tree

interface AdminAdminRouteChildren {
  AdminAdminAccessKeysRoute: typeof AdminAdminAccessKeysRoute
  AdminAdminContactsRoute: typeof AdminAdminContactsRoute
  AdminAdminPaymailsRoute: typeof AdminAdminPaymailsRoute
  AdminAdminTransactionsRoute: typeof AdminAdminTransactionsRoute
  AdminAdminWebhooksRoute: typeof AdminAdminWebhooksRoute
  AdminAdminXpubRoute: typeof AdminAdminXpubRoute
}

const AdminAdminRouteChildren: AdminAdminRouteChildren = {
  AdminAdminAccessKeysRoute: AdminAdminAccessKeysRoute,
  AdminAdminContactsRoute: AdminAdminContactsRoute,
  AdminAdminPaymailsRoute: AdminAdminPaymailsRoute,
  AdminAdminTransactionsRoute: AdminAdminTransactionsRoute,
  AdminAdminWebhooksRoute: AdminAdminWebhooksRoute,
  AdminAdminXpubRoute: AdminAdminXpubRoute,
}

const AdminAdminRouteWithChildren = AdminAdminRoute._addFileChildren(
  AdminAdminRouteChildren,
)

interface AdminRouteChildren {
  AdminAdminRoute: typeof AdminAdminRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminRoute: AdminAdminRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface UserUserRouteChildren {
  UserUserAccessKeysRoute: typeof UserUserAccessKeysRoute
  UserUserTransactionsRoute: typeof UserUserTransactionsRoute
  UserUserXpubRoute: typeof UserUserXpubRoute
}

const UserUserRouteChildren: UserUserRouteChildren = {
  UserUserAccessKeysRoute: UserUserAccessKeysRoute,
  UserUserTransactionsRoute: UserUserTransactionsRoute,
  UserUserXpubRoute: UserUserXpubRoute,
}

const UserUserRouteWithChildren = UserUserRoute._addFileChildren(
  UserUserRouteChildren,
)

interface UserRouteChildren {
  UserUserRoute: typeof UserUserRouteWithChildren
}

const UserRouteChildren: UserRouteChildren = {
  UserUserRoute: UserUserRouteWithChildren,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/about': typeof AboutLazyRoute
  '/admin': typeof AdminAdminRouteWithChildren
  '/user': typeof UserUserRouteWithChildren
  '/admin/access-keys': typeof AdminAdminAccessKeysRoute
  '/admin/contacts': typeof AdminAdminContactsRoute
  '/admin/paymails': typeof AdminAdminPaymailsRoute
  '/admin/transactions': typeof AdminAdminTransactionsRoute
  '/admin/webhooks': typeof AdminAdminWebhooksRoute
  '/admin/xpub': typeof AdminAdminXpubRoute
  '/user/access-keys': typeof UserUserAccessKeysRoute
  '/user/transactions': typeof UserUserTransactionsRoute
  '/user/xpub': typeof UserUserXpubRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/about': typeof AboutLazyRoute
  '/admin': typeof AdminAdminRouteWithChildren
  '/user': typeof UserUserRouteWithChildren
  '/admin/access-keys': typeof AdminAdminAccessKeysRoute
  '/admin/contacts': typeof AdminAdminContactsRoute
  '/admin/paymails': typeof AdminAdminPaymailsRoute
  '/admin/transactions': typeof AdminAdminTransactionsRoute
  '/admin/webhooks': typeof AdminAdminWebhooksRoute
  '/admin/xpub': typeof AdminAdminXpubRoute
  '/user/access-keys': typeof UserUserAccessKeysRoute
  '/user/transactions': typeof UserUserTransactionsRoute
  '/user/xpub': typeof UserUserXpubRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/about': typeof AboutLazyRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/_admin': typeof AdminAdminRouteWithChildren
  '/user': typeof UserRouteWithChildren
  '/user/_user': typeof UserUserRouteWithChildren
  '/admin/_admin/access-keys': typeof AdminAdminAccessKeysRoute
  '/admin/_admin/contacts': typeof AdminAdminContactsRoute
  '/admin/_admin/paymails': typeof AdminAdminPaymailsRoute
  '/admin/_admin/transactions': typeof AdminAdminTransactionsRoute
  '/admin/_admin/webhooks': typeof AdminAdminWebhooksRoute
  '/admin/_admin/xpub': typeof AdminAdminXpubRoute
  '/user/_user/access-keys': typeof UserUserAccessKeysRoute
  '/user/_user/transactions': typeof UserUserTransactionsRoute
  '/user/_user/xpub': typeof UserUserXpubRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/about'
    | '/admin'
    | '/user'
    | '/admin/access-keys'
    | '/admin/contacts'
    | '/admin/paymails'
    | '/admin/transactions'
    | '/admin/webhooks'
    | '/admin/xpub'
    | '/user/access-keys'
    | '/user/transactions'
    | '/user/xpub'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/about'
    | '/admin'
    | '/user'
    | '/admin/access-keys'
    | '/admin/contacts'
    | '/admin/paymails'
    | '/admin/transactions'
    | '/admin/webhooks'
    | '/admin/xpub'
    | '/user/access-keys'
    | '/user/transactions'
    | '/user/xpub'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/about'
    | '/admin'
    | '/admin/_admin'
    | '/user'
    | '/user/_user'
    | '/admin/_admin/access-keys'
    | '/admin/_admin/contacts'
    | '/admin/_admin/paymails'
    | '/admin/_admin/transactions'
    | '/admin/_admin/webhooks'
    | '/admin/_admin/xpub'
    | '/user/_user/access-keys'
    | '/user/_user/transactions'
    | '/user/_user/xpub'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AdminRoute: typeof AdminRouteWithChildren
  UserRoute: typeof UserRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  AboutLazyRoute: AboutLazyRoute,
  AdminRoute: AdminRouteWithChildren,
  UserRoute: UserRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/about",
        "/admin",
        "/user"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/admin": {
      "filePath": "admin",
      "children": [
        "/admin/_admin"
      ]
    },
    "/admin/_admin": {
      "filePath": "admin/_admin.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_admin/access-keys",
        "/admin/_admin/contacts",
        "/admin/_admin/paymails",
        "/admin/_admin/transactions",
        "/admin/_admin/webhooks",
        "/admin/_admin/xpub"
      ]
    },
    "/user": {
      "filePath": "user",
      "children": [
        "/user/_user"
      ]
    },
    "/user/_user": {
      "filePath": "user/_user.tsx",
      "parent": "/user",
      "children": [
        "/user/_user/access-keys",
        "/user/_user/transactions",
        "/user/_user/xpub"
      ]
    },
    "/admin/_admin/access-keys": {
      "filePath": "admin/_admin.access-keys.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/contacts": {
      "filePath": "admin/_admin.contacts.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/paymails": {
      "filePath": "admin/_admin.paymails.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/transactions": {
      "filePath": "admin/_admin.transactions.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/webhooks": {
      "filePath": "admin/_admin.webhooks.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/xpub": {
      "filePath": "admin/_admin.xpub.tsx",
      "parent": "/admin/_admin"
    },
    "/user/_user/access-keys": {
      "filePath": "user/_user.access-keys.tsx",
      "parent": "/user/_user"
    },
    "/user/_user/transactions": {
      "filePath": "user/_user.transactions.tsx",
      "parent": "/user/_user"
    },
    "/user/_user/xpub": {
      "filePath": "user/_user.xpub.tsx",
      "parent": "/user/_user"
    }
  }
}
ROUTE_MANIFEST_END */
