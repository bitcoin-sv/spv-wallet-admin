/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes
import { Route as rootRoute } from './__root';
import { Route as AdminAdminImport } from './admin/_admin';
import { Route as AdminAdminAccessKeysImport } from './admin/_admin.access-keys';
import { Route as AdminAdminContactsImport } from './admin/_admin.contacts';
import { Route as AdminAdminDestinationsImport } from './admin/_admin.destinations';
import { Route as AdminAdminPaymailsImport } from './admin/_admin.paymails';
import { Route as AdminAdminTransactionsImport } from './admin/_admin.transactions';
import { Route as AdminAdminWebhooksImport } from './admin/_admin.webhooks';
import { Route as AdminAdminXpubImport } from './admin/_admin.xpub';
import { Route as IndexImport } from './index';
import { Route as LoginImport } from './login';
import { Route as UserUserImport } from './user/_user';
import { Route as UserUserAccessKeysImport } from './user/_user.access-keys';
import { Route as UserUserDestinationsImport } from './user/_user.destinations';
import { Route as UserUserTransactionsImport } from './user/_user.transactions';
import { Route as UserUserXpubImport } from './user/_user.xpub';

// Create Virtual Routes

const UserImport = createFileRoute('/user')()
const AdminImport = createFileRoute('/admin')()
const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const UserRoute = UserImport.update({
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./about.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserUserRoute = UserUserImport.update({
  id: '/_user',
  getParentRoute: () => UserRoute,
} as any)

const AdminAdminRoute = AdminAdminImport.update({
  id: '/_admin',
  getParentRoute: () => AdminRoute,
} as any)

const UserUserXpubRoute = UserUserXpubImport.update({
  path: '/xpub',
  getParentRoute: () => UserUserRoute,
} as any)

const UserUserTransactionsRoute = UserUserTransactionsImport.update({
  path: '/transactions',
  getParentRoute: () => UserUserRoute,
} as any)

const UserUserDestinationsRoute = UserUserDestinationsImport.update({
  path: '/destinations',
  getParentRoute: () => UserUserRoute,
} as any)

const UserUserAccessKeysRoute = UserUserAccessKeysImport.update({
  path: '/access-keys',
  getParentRoute: () => UserUserRoute,
} as any)

const AdminAdminXpubRoute = AdminAdminXpubImport.update({
  path: '/xpub',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminWebhooksRoute = AdminAdminWebhooksImport.update({
  path: '/webhooks',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminTransactionsRoute = AdminAdminTransactionsImport.update({
  path: '/transactions',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminPaymailsRoute = AdminAdminPaymailsImport.update({
  path: '/paymails',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminDestinationsRoute = AdminAdminDestinationsImport.update({
  path: '/destinations',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminContactsRoute = AdminAdminContactsImport.update({
  path: '/contacts',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminAccessKeysRoute = AdminAdminAccessKeysImport.update({
  path: '/access-keys',
  getParentRoute: () => AdminAdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/admin/_admin': {
      id: '/admin/_admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminImport
      parentRoute: typeof AdminRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/user/_user': {
      id: '/user/_user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserUserImport
      parentRoute: typeof UserRoute
    }
    '/admin/_admin/access-keys': {
      id: '/admin/_admin/access-keys'
      path: '/access-keys'
      fullPath: '/admin/access-keys'
      preLoaderRoute: typeof AdminAdminAccessKeysImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/contacts': {
      id: '/admin/_admin/contacts'
      path: '/contacts'
      fullPath: '/admin/contacts'
      preLoaderRoute: typeof AdminAdminContactsImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/destinations': {
      id: '/admin/_admin/destinations'
      path: '/destinations'
      fullPath: '/admin/destinations'
      preLoaderRoute: typeof AdminAdminDestinationsImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/paymails': {
      id: '/admin/_admin/paymails'
      path: '/paymails'
      fullPath: '/admin/paymails'
      preLoaderRoute: typeof AdminAdminPaymailsImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/transactions': {
      id: '/admin/_admin/transactions'
      path: '/transactions'
      fullPath: '/admin/transactions'
      preLoaderRoute: typeof AdminAdminTransactionsImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/webhooks': {
      id: '/admin/_admin/webhooks'
      path: '/webhooks'
      fullPath: '/admin/webhooks'
      preLoaderRoute: typeof AdminAdminWebhooksImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/xpub': {
      id: '/admin/_admin/xpub'
      path: '/xpub'
      fullPath: '/admin/xpub'
      preLoaderRoute: typeof AdminAdminXpubImport
      parentRoute: typeof AdminAdminImport
    }
    '/user/_user/access-keys': {
      id: '/user/_user/access-keys'
      path: '/access-keys'
      fullPath: '/user/access-keys'
      preLoaderRoute: typeof UserUserAccessKeysImport
      parentRoute: typeof UserUserImport
    }
    '/user/_user/destinations': {
      id: '/user/_user/destinations'
      path: '/destinations'
      fullPath: '/user/destinations'
      preLoaderRoute: typeof UserUserDestinationsImport
      parentRoute: typeof UserUserImport
    }
    '/user/_user/transactions': {
      id: '/user/_user/transactions'
      path: '/transactions'
      fullPath: '/user/transactions'
      preLoaderRoute: typeof UserUserTransactionsImport
      parentRoute: typeof UserUserImport
    }
    '/user/_user/xpub': {
      id: '/user/_user/xpub'
      path: '/xpub'
      fullPath: '/user/xpub'
      preLoaderRoute: typeof UserUserXpubImport
      parentRoute: typeof UserUserImport
    }
  }
}

// Create and export the route tree

interface AdminAdminRouteChildren {
  AdminAdminAccessKeysRoute: typeof AdminAdminAccessKeysRoute;
  AdminAdminContactsRoute: typeof AdminAdminContactsRoute;
  AdminAdminDestinationsRoute: typeof AdminAdminDestinationsRoute;
  AdminAdminPaymailsRoute: typeof AdminAdminPaymailsRoute;
  AdminAdminTransactionsRoute: typeof AdminAdminTransactionsRoute;
  AdminAdminWebhooksRoute: typeof AdminAdminWebhooksRoute;
  AdminAdminXpubRoute: typeof AdminAdminXpubRoute;
}

const AdminAdminRouteChildren: AdminAdminRouteChildren = {
  AdminAdminAccessKeysRoute: AdminAdminAccessKeysRoute,
  AdminAdminContactsRoute: AdminAdminContactsRoute,
  AdminAdminDestinationsRoute: AdminAdminDestinationsRoute,
  AdminAdminPaymailsRoute: AdminAdminPaymailsRoute,
  AdminAdminTransactionsRoute: AdminAdminTransactionsRoute,
  AdminAdminWebhooksRoute: AdminAdminWebhooksRoute,
  AdminAdminXpubRoute: AdminAdminXpubRoute,
};

const AdminAdminRouteWithChildren = AdminAdminRoute._addFileChildren(
  AdminAdminRouteChildren,
);

interface AdminRouteChildren {
  AdminAdminRoute: typeof AdminAdminRouteWithChildren;
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminRoute: AdminAdminRouteWithChildren,
};

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren);

interface UserUserRouteChildren {
  UserUserAccessKeysRoute: typeof UserUserAccessKeysRoute;
  UserUserDestinationsRoute: typeof UserUserDestinationsRoute;
  UserUserTransactionsRoute: typeof UserUserTransactionsRoute;
  UserUserXpubRoute: typeof UserUserXpubRoute;
}

const UserUserRouteChildren: UserUserRouteChildren = {
  UserUserAccessKeysRoute: UserUserAccessKeysRoute,
  UserUserDestinationsRoute: UserUserDestinationsRoute,
  UserUserTransactionsRoute: UserUserTransactionsRoute,
  UserUserXpubRoute: UserUserXpubRoute,
};

const UserUserRouteWithChildren = UserUserRoute._addFileChildren(
  UserUserRouteChildren,
);

interface UserRouteChildren {
  UserUserRoute: typeof UserUserRouteWithChildren;
}

const UserRouteChildren: UserRouteChildren = {
  UserUserRoute: UserUserRouteWithChildren,
};

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/login': typeof LoginRoute;
  '/about': typeof AboutLazyRoute;
  '/admin': typeof AdminAdminRouteWithChildren;
  '/user': typeof UserUserRouteWithChildren;
  '/admin/access-keys': typeof AdminAdminAccessKeysRoute;
  '/admin/contacts': typeof AdminAdminContactsRoute;
  '/admin/destinations': typeof AdminAdminDestinationsRoute;
  '/admin/paymails': typeof AdminAdminPaymailsRoute;
  '/admin/transactions': typeof AdminAdminTransactionsRoute;
  '/admin/webhooks': typeof AdminAdminWebhooksRoute;
  '/admin/xpub': typeof AdminAdminXpubRoute;
  '/user/access-keys': typeof UserUserAccessKeysRoute;
  '/user/destinations': typeof UserUserDestinationsRoute;
  '/user/transactions': typeof UserUserTransactionsRoute;
  '/user/xpub': typeof UserUserXpubRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/login': typeof LoginRoute;
  '/about': typeof AboutLazyRoute;
  '/admin': typeof AdminAdminRouteWithChildren;
  '/user': typeof UserUserRouteWithChildren;
  '/admin/access-keys': typeof AdminAdminAccessKeysRoute;
  '/admin/contacts': typeof AdminAdminContactsRoute;
  '/admin/destinations': typeof AdminAdminDestinationsRoute;
  '/admin/paymails': typeof AdminAdminPaymailsRoute;
  '/admin/transactions': typeof AdminAdminTransactionsRoute;
  '/admin/webhooks': typeof AdminAdminWebhooksRoute;
  '/admin/xpub': typeof AdminAdminXpubRoute;
  '/user/access-keys': typeof UserUserAccessKeysRoute;
  '/user/destinations': typeof UserUserDestinationsRoute;
  '/user/transactions': typeof UserUserTransactionsRoute;
  '/user/xpub': typeof UserUserXpubRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/login': typeof LoginRoute;
  '/about': typeof AboutLazyRoute;
  '/admin': typeof AdminRouteWithChildren;
  '/admin/_admin': typeof AdminAdminRouteWithChildren;
  '/user': typeof UserRouteWithChildren;
  '/user/_user': typeof UserUserRouteWithChildren;
  '/admin/_admin/access-keys': typeof AdminAdminAccessKeysRoute;
  '/admin/_admin/contacts': typeof AdminAdminContactsRoute;
  '/admin/_admin/destinations': typeof AdminAdminDestinationsRoute;
  '/admin/_admin/paymails': typeof AdminAdminPaymailsRoute;
  '/admin/_admin/transactions': typeof AdminAdminTransactionsRoute;
  '/admin/_admin/webhooks': typeof AdminAdminWebhooksRoute;
  '/admin/_admin/xpub': typeof AdminAdminXpubRoute;
  '/user/_user/access-keys': typeof UserUserAccessKeysRoute;
  '/user/_user/destinations': typeof UserUserDestinationsRoute;
  '/user/_user/transactions': typeof UserUserTransactionsRoute;
  '/user/_user/xpub': typeof UserUserXpubRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/login'
    | '/about'
    | '/admin'
    | '/user'
    | '/admin/access-keys'
    | '/admin/contacts'
    | '/admin/destinations'
    | '/admin/paymails'
    | '/admin/transactions'
    | '/admin/webhooks'
    | '/admin/xpub'
    | '/user/access-keys'
    | '/user/destinations'
    | '/user/transactions'
    | '/user/xpub';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/login'
    | '/about'
    | '/admin'
    | '/user'
    | '/admin/access-keys'
    | '/admin/contacts'
    | '/admin/destinations'
    | '/admin/paymails'
    | '/admin/transactions'
    | '/admin/webhooks'
    | '/admin/xpub'
    | '/user/access-keys'
    | '/user/destinations'
    | '/user/transactions'
    | '/user/xpub';
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/about'
    | '/admin'
    | '/admin/_admin'
    | '/user'
    | '/user/_user'
    | '/admin/_admin/access-keys'
    | '/admin/_admin/contacts'
    | '/admin/_admin/destinations'
    | '/admin/_admin/paymails'
    | '/admin/_admin/transactions'
    | '/admin/_admin/webhooks'
    | '/admin/_admin/xpub'
    | '/user/_user/access-keys'
    | '/user/_user/destinations'
    | '/user/_user/transactions'
    | '/user/_user/xpub';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  LoginRoute: typeof LoginRoute;
  AboutLazyRoute: typeof AboutLazyRoute;
  AdminRoute: typeof AdminRouteWithChildren;
  UserRoute: typeof UserRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  AboutLazyRoute: AboutLazyRoute,
  AdminRoute: AdminRouteWithChildren,
  UserRoute: UserRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/about",
        "/admin",
        "/user"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/admin": {
      "filePath": "admin",
      "children": [
        "/admin/_admin"
      ]
    },
    "/admin/_admin": {
      "filePath": "admin/_admin.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_admin/access-keys",
        "/admin/_admin/contacts",
        "/admin/_admin/destinations",
        "/admin/_admin/paymails",
        "/admin/_admin/transactions",
        "/admin/_admin/webhooks",
        "/admin/_admin/xpub"
      ]
    },
    "/user": {
      "filePath": "user",
      "children": [
        "/user/_user"
      ]
    },
    "/user/_user": {
      "filePath": "user/_user.tsx",
      "parent": "/user",
      "children": [
        "/user/_user/access-keys",
        "/user/_user/destinations",
        "/user/_user/transactions",
        "/user/_user/xpub"
      ]
    },
    "/admin/_admin/access-keys": {
      "filePath": "admin/_admin.access-keys.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/contacts": {
      "filePath": "admin/_admin.contacts.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/destinations": {
      "filePath": "admin/_admin.destinations.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/paymails": {
      "filePath": "admin/_admin.paymails.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/transactions": {
      "filePath": "admin/_admin.transactions.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/webhooks": {
      "filePath": "admin/_admin.webhooks.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/xpub": {
      "filePath": "admin/_admin.xpub.tsx",
      "parent": "/admin/_admin"
    },
    "/user/_user/access-keys": {
      "filePath": "user/_user.access-keys.tsx",
      "parent": "/user/_user"
    },
    "/user/_user/destinations": {
      "filePath": "user/_user.destinations.tsx",
      "parent": "/user/_user"
    },
    "/user/_user/transactions": {
      "filePath": "user/_user.transactions.tsx",
      "parent": "/user/_user"
    },
    "/user/_user/xpub": {
      "filePath": "user/_user.xpub.tsx",
      "parent": "/user/_user"
    }
  }
}
ROUTE_MANIFEST_END */
